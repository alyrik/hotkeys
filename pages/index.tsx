import { useEffect, useRef, useState } from 'react';
import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import io from 'socket.io-client';

import styles from '../styles/Home.module.css';
import { SocketEvent } from '../models/SocketEvent';
import dataService from '../services/countService';

const IMAGE_HOST = 'https://hotkeys-gifs.s3.eu-central-1.amazonaws.com/';

const screenMapping: Record<number, string> = {
  1: 'Move+Caret+to+Previous%3ANext+Word.gif',
  2: 'Move+Caret+to+Line+Start%3AEnd.gif',
  3: 'Select+Single+Line+at+Caret.gif',
  4: 'Extend%3AShrink+Selection.gif',
  5: 'Add%3ARemove+Selection+for+Next+Occurrence.gif',
  6: 'Delete+Line.gif',
  7: 'Duplicate+Line+or+Selection.gif',
  8: 'Undo%3ARedo.gif',
  9: 'Start+New+Line.gif',
  10: 'Indent%3AUnindent+Line+or+Selection.gif',
};

interface IHomePageProps {
  initialCount: number;
}

const Home: NextPage<IHomePageProps> = ({ initialCount }) => {
  const [screenNumber, setScreenNumber] = useState(initialCount);
  let socketClient = useRef<ReturnType<typeof io>>();

  useEffect(() => {
    fetch('/api/ws').finally(() => {
      socketClient.current = io();

      socketClient.current?.on('connect', () => {
        console.log('connected');
      });

      socketClient.current?.on(
        SocketEvent.ReceiveUpdateCount,
        (count: number) => {
          setScreenNumber(Number(count));
        },
      );

      socketClient.current?.on('disconnect', () => {
        console.log('disconnected');
      });
    });
  }, []);

  function handleNextButtonClick() {
    const nextCount = Number(screenNumber) + 1;
    setScreenNumber(nextCount);
    socketClient.current?.emit(SocketEvent.UpdateCount, nextCount);
  }

  function handleResetButtonClick() {
    const nextCount = 1;
    setScreenNumber(nextCount);
    socketClient.current?.emit(SocketEvent.UpdateCount, nextCount);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Very hot keys</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          <div
            style={{
              width: '100%',
              height: 0,
              paddingBottom: '51%',
              position: 'relative',
            }}>
            <img
              src={`${IMAGE_HOST}${screenMapping[screenNumber]}`}
              width="100%"
              height="100%"
              style={{ position: 'absolute' }}
            />
          </div>
        </div>
        <br/>

        <div>
          <button onClick={handleNextButtonClick}>Go to the next slide</button>
        </div>
        <br/>
        <div>
          <button onClick={handleResetButtonClick}>
            Go to the first slide
          </button>
        </div>
      </main>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps<
  IHomePageProps
> = async () => {
  return {
    props: {
      initialCount: dataService.getCount(),
    },
  };
};

export default Home;
